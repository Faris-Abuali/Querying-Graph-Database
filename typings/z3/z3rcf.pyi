"""
This type stub file was generated by pyright.
"""

from .z3 import *
from .z3core import *
from .z3printer import *

def Pi(ctx=...): # -> RCFNum:
    ...

def E(ctx=...): # -> RCFNum:
    ...

def MkInfinitesimal(name=..., ctx=...): # -> RCFNum:
    ...

def MkRoots(p, ctx=...): # -> list[Any]:
    ...

class RCFNum:
    def __init__(self, num, ctx=...) -> None:
        ...
    
    def __del__(self): # -> None:
        ...
    
    def ctx_ref(self): # -> Any | None:
        ...
    
    def __repr__(self): # -> Any | Literal['']:
        ...
    
    def compact_str(self): # -> Any | Literal['']:
        ...
    
    def __add__(self, other): # -> RCFNum:
        ...
    
    def __radd__(self, other): # -> RCFNum:
        ...
    
    def __mul__(self, other): # -> RCFNum:
        ...
    
    def __rmul__(self, other): # -> RCFNum:
        ...
    
    def __sub__(self, other): # -> RCFNum:
        ...
    
    def __rsub__(self, other): # -> RCFNum:
        ...
    
    def __div__(self, other): # -> RCFNum:
        ...
    
    def __rdiv__(self, other): # -> RCFNum:
        ...
    
    def __neg__(self): # -> RCFNum:
        ...
    
    def power(self, k): # -> RCFNum:
        ...
    
    def __pow__(self, k): # -> RCFNum:
        ...
    
    def decimal(self, prec=...): # -> Any | Literal['']:
        ...
    
    def __lt__(self, other) -> bool:
        ...
    
    def __rlt__(self, other): # -> Any:
        ...
    
    def __gt__(self, other) -> bool:
        ...
    
    def __rgt__(self, other): # -> Any:
        ...
    
    def __le__(self, other) -> bool:
        ...
    
    def __rle__(self, other): # -> Any:
        ...
    
    def __ge__(self, other) -> bool:
        ...
    
    def __rge__(self, other): # -> Any:
        ...
    
    def __eq__(self, other) -> bool:
        ...
    
    def __ne__(self, other) -> bool:
        ...
    
    def split(self): # -> tuple[RCFNum, RCFNum]:
        ...
    



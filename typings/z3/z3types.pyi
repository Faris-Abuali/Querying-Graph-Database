"""
This type stub file was generated by pyright.
"""

import ctypes

class Z3Exception(Exception):
    def __init__(self, value) -> None:
        ...
    
    def __str__(self) -> str:
        ...
    


class ContextObj(ctypes.c_void_p):
    def __init__(self, context) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class Config(ctypes.c_void_p):
    def __init__(self, config) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class Symbol(ctypes.c_void_p):
    def __init__(self, symbol) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class Sort(ctypes.c_void_p):
    def __init__(self, sort) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class FuncDecl(ctypes.c_void_p):
    def __init__(self, decl) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class Ast(ctypes.c_void_p):
    def __init__(self, ast) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class Pattern(ctypes.c_void_p):
    def __init__(self, pattern) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class Model(ctypes.c_void_p):
    def __init__(self, model) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class Literals(ctypes.c_void_p):
    def __init__(self, literals) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class Constructor(ctypes.c_void_p):
    def __init__(self, constructor) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class ConstructorList(ctypes.c_void_p):
    def __init__(self, constructor_list) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class GoalObj(ctypes.c_void_p):
    def __init__(self, goal) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class TacticObj(ctypes.c_void_p):
    def __init__(self, tactic) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class SimplifierObj(ctypes.c_void_p):
    def __init__(self, simplifier) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class ProbeObj(ctypes.c_void_p):
    def __init__(self, probe) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class ApplyResultObj(ctypes.c_void_p):
    def __init__(self, obj) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class StatsObj(ctypes.c_void_p):
    def __init__(self, statistics) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class SolverObj(ctypes.c_void_p):
    def __init__(self, solver) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class SolverCallbackObj(ctypes.c_void_p):
    def __init__(self, solver) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class FixedpointObj(ctypes.c_void_p):
    def __init__(self, fixedpoint) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class OptimizeObj(ctypes.c_void_p):
    def __init__(self, optimize) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class ModelObj(ctypes.c_void_p):
    def __init__(self, model) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class AstVectorObj(ctypes.c_void_p):
    def __init__(self, vector) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class AstMapObj(ctypes.c_void_p):
    def __init__(self, ast_map) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class Params(ctypes.c_void_p):
    def __init__(self, params) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class ParamDescrs(ctypes.c_void_p):
    def __init__(self, paramdescrs) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class ParserContextObj(ctypes.c_void_p):
    def __init__(self, pc) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class FuncInterpObj(ctypes.c_void_p):
    def __init__(self, f) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class FuncEntryObj(ctypes.c_void_p):
    def __init__(self, e) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


class RCFNumObj(ctypes.c_void_p):
    def __init__(self, e) -> None:
        ...
    
    def from_param(obj): # -> Self:
        ...
    


